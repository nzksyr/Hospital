{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommunicationService } from 'src/app/services/communication.service';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/communication.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nexport let AddFormComponent = /*#__PURE__*/(() => {\n  class AddFormComponent {\n    constructor(fb, communication, dialog) {\n      this.fb = fb;\n      this.communication = communication;\n      this.dialog = dialog;\n      this.specialiteMapping = [];\n    }\n\n    ngOnInit() {\n      this.communication.getDoctors().subscribe({\n        next: docs => {\n          this.communication.getService().subscribe({\n            next: service => {\n              this.specialiteMapping = service;\n            }\n          });\n          this.doctors = docs;\n          this.updateSpecialiteOptions();\n        }\n      });\n      this.addForm = this.fb.group({\n        idmedecin: ['', [Validators.required, Validators.min(0)]],\n        prenom: [''],\n        nom: [''],\n        specialite: ['Dermatologie'],\n        anneesexperience: ['', [Validators.required, Validators.min(0)]],\n        idservice: [0, [Validators.required, Validators.min(0), Validators.max(9)]]\n      });\n    }\n\n    updateSpecialiteOptions() {\n      this.addForm.get('idservice').valueChanges.subscribe(idService => {\n        var _a;\n\n        const selectedSpecialite = (_a = this.specialiteMapping.find(mapping => mapping.idservice === idService)) === null || _a === void 0 ? void 0 : _a.nomservice;\n        this.addForm.get('specialite').setValue(selectedSpecialite);\n      });\n    }\n\n    isDocIdDuplicate() {\n      var _a;\n\n      const docId = (_a = this.addForm.get('idmedecin')) === null || _a === void 0 ? void 0 : _a.value;\n      console.log(docId);\n      return this.doctors.some(doctor => doctor.idmedecin === docId);\n    }\n\n    onSubmit() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n\n      let alert = '';\n\n      if ((((_a = this.addForm.get('nom')) === null || _a === void 0 ? void 0 : _a.hasError('required')) || ((_b = this.addForm.get('prenom')) === null || _b === void 0 ? void 0 : _b.hasError('required'))) && !this.isDocIdDuplicate()) {\n        alert = 'Cases manquantes.';\n      } else if (((_c = this.addForm.get('nom')) === null || _c === void 0 ? void 0 : _c.hasError('required')) || ((_d = this.addForm.get('prenom')) === null || _d === void 0 ? void 0 : _d.hasError('required')) || ((_e = this.addForm.get('idmedecin')) === null || _e === void 0 ? void 0 : _e.hasError('required')) || ((_f = this.addForm.get('anneesexperience')) === null || _f === void 0 ? void 0 : _f.hasError('required'))) {\n        alert = 'Cases manquantes.';\n      } else if (((_g = this.addForm.get('prenom')) === null || _g === void 0 ? void 0 : _g.valid) && ((_h = this.addForm.get('nom')) === null || _h === void 0 ? void 0 : _h.valid) && ((_j = this.addForm.get('anneesexperience')) === null || _j === void 0 ? void 0 : _j.valid) && this.isDocIdDuplicate()) {\n        alert = 'Identifiant déjà existant.';\n      } else if ((((_k = this.addForm.get('nom')) === null || _k === void 0 ? void 0 : _k.hasError('required')) || ((_l = this.addForm.get('prenom')) === null || _l === void 0 ? void 0 : _l.hasError('required')) || ((_m = this.addForm.get('anneesexperience')) === null || _m === void 0 ? void 0 : _m.hasError('required'))) && this.isDocIdDuplicate()) {\n        alert = 'Cases manquantes. Identifiant déjà existant';\n      } else {\n        const formData = {\n          idmedecin: (_o = this.addForm.get('idmedecin')) === null || _o === void 0 ? void 0 : _o.value,\n          prenom: (_p = this.addForm.get('prenom')) === null || _p === void 0 ? void 0 : _p.value,\n          nom: (_q = this.addForm.get('nom')) === null || _q === void 0 ? void 0 : _q.value,\n          specialite: (_r = this.addForm.get('specialite')) === null || _r === void 0 ? void 0 : _r.value,\n          anneesexperience: (_s = this.addForm.get('anneesexperience')) === null || _s === void 0 ? void 0 : _s.value,\n          idservice: (_t = this.addForm.get('idservice')) === null || _t === void 0 ? void 0 : _t.value\n        };\n        this.communication.insertDoctor(formData).subscribe({\n          next: () => {\n            const dialogRefSec = this.dialog.open(DialogComponent, {\n              disableClose: true,\n              data: {\n                title: 'Confirmation',\n                message: 'Le médecin a été ajouté avec succès !'\n              }\n            });\n            dialogRefSec.afterClosed().subscribe(() => {\n              location.reload();\n            });\n          },\n          error: error => {\n            console.error('Médecin non ajouté:', error);\n          }\n        });\n      }\n\n      const dialogRefSec = this.dialog.open(DialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'Erreur',\n          message: alert\n        }\n      });\n      dialogRefSec.afterClosed().subscribe(() => {\n        this.dialog.open(AddFormComponent, {\n          disableClose: true\n        });\n      });\n    }\n\n    handleKeydown(event) {\n      const allowedKeys = ['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'];\n\n      if (!allowedKeys.includes(event.key)) {\n        event.preventDefault();\n      }\n    }\n\n  }\n\n  AddFormComponent.ɵfac = function AddFormComponent_Factory(t) {\n    return new (t || AddFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CommunicationService), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  AddFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddFormComponent,\n    selectors: [[\"app-add-form\"]],\n    decls: 34,\n    vars: 3,\n    consts: [[\"id\", \"addForm\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\", 1, \"custom-dialog-content\"], [3, \"formGroup\"], [1, \"label\"], [\"type\", \"number\", \"formControlName\", \"idmedecin\", \"id\", \"idMedecin\", \"required\", \"\", \"min\", \"0\", 3, \"placeholder\"], [\"type\", \"text\", \"formControlName\", \"prenom\", \"placeholder\", \"Jean\", \"id\", \"prenom\", \"maxlength\", \"25\", \"pattern\", \"^[a-zA-Z]+(-[a-zA-Z]+)?$\", \"required\", \"\"], [\"type\", \"text\", \"formControlName\", \"nom\", \"placeholder\", \"Doe\", \"id\", \"nom\", \"maxlength\", \"20\", \"pattern\", \"^[a-zA-Z]+(-[a-zA-Z]+)?$\", \"required\", \"\"], [\"type\", \"text\", \"formControlName\", \"specialite\", \"placeholder\", \"Dermatologie\", \"id\", \"specialite\", \"readonly\", \"\", \"required\", \"\"], [\"type\", \"number\", \"formControlName\", \"anneesexperience\", \"placeholder\", \"0\", \"id\", \"anneesExperience\", \"min\", \"0\"], [\"type\", \"number\", \"formControlName\", \"idservice\", \"placeholder\", \"0\", \"id\", \"idService\", \"min\", \"0\", \"max\", \"9\", 3, \"keydown\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", \"type\", \"submit\", 3, \"click\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\"]],\n    template: function AddFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Ajout d'un nouveau m\\u00E9decin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3)(5, \"div\", 4)(6, \"p\");\n        i0.ɵɵtext(7, \"Identifiant du m\\u00E9decin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"p\");\n        i0.ɵɵtext(11, \"Pr\\u00E9nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"p\");\n        i0.ɵɵtext(15, \"Nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 4)(18, \"p\");\n        i0.ɵɵtext(19, \"Sp\\u00E9cialit\\u00E9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 4)(22, \"p\");\n        i0.ɵɵtext(23, \"Ann\\u00E9es d'exp\\u00E9rience\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 4)(26, \"p\");\n        i0.ɵɵtext(27, \"Identifiant du service\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 10);\n        i0.ɵɵlistener(\"keydown\", function AddFormComponent_Template_input_keydown_28_listener($event) {\n          return ctx.handleKeydown($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(29, \"div\", 11)(30, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function AddFormComponent_Template_button_click_30_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(31, \"Ajouter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 13);\n        i0.ɵɵtext(33, \"Annuler\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.addForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"placeholder\", 0);\n        i0.ɵɵadvance(24);\n        i0.ɵɵproperty(\"mat-dialog-close\", true);\n      }\n    },\n    directives: [i3.MatDialogTitle, i3.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.NumberValueAccessor, i1.MinValidator, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.MaxLengthValidator, i1.PatternValidator, i1.MaxValidator, i3.MatDialogActions, i4.MatButton, i3.MatDialogClose],\n    styles: [\".custom-dialog-content[_ngcontent-%COMP%]{overflow:hidden;box-sizing:border-box;display:flex;flex-direction:column;flex:1;height:100%;width:500px}.custom-dialog-content[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex:1;margin:0}.custom-dialog-content[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{margin-bottom:10px}.custom-dialog-content[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;border:1px solid black;border-radius:5px}.mat-dialog-actions[_ngcontent-%COMP%]{margin-top:auto;justify-content:flex-end}.custom-dialog-content[_ngcontent-%COMP%]   input#anneesExperience[_ngcontent-%COMP%]::-webkit-inner-spin-button, .custom-dialog-content[_ngcontent-%COMP%]   input#anneesExperience[_ngcontent-%COMP%]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.custom-dialog-content[_ngcontent-%COMP%]   input#anneesExperience[_ngcontent-%COMP%]{-moz-appearance:textfield}input[_ngcontent-%COMP%]{padding-left:3.5px;padding-top:3.5px;padding-bottom:3.5px;border:1px solid #ccc;border-radius:5px}.mat-dialog-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:first-child:hover{background-color:#87ceeb}input[_ngcontent-%COMP%]:focus::-moz-placeholder{color:transparent}input[_ngcontent-%COMP%]:focus::placeholder{color:transparent}\"]\n  });\n  return AddFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}