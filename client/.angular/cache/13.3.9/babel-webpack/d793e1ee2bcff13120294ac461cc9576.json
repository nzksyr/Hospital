{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table'; // import { MatDialog } from '@angular/material/dialog';\n\nimport { CommunicationService } from 'src/app/services/communication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/communication.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction DoctorComponent_div_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", key_r4, \" \");\n  }\n}\n\nfunction DoctorComponent_div_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r5 = ctx.$implicit;\n    const d_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", d_r1[key_r5], \" \");\n  }\n}\n\nfunction DoctorComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, DoctorComponent_div_1_span_1_Template, 2, 1, \"span\", 3);\n    i0.ɵɵtemplate(2, DoctorComponent_div_1_span_2_Template, 2, 1, \"span\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const d_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getObjectKeys(d_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getObjectKeys(d_r1));\n  }\n}\n\nexport let DoctorComponent = /*#__PURE__*/(() => {\n  class DoctorComponent {\n    constructor(communication) {\n      this.communication = communication;\n      this.doctors = [];\n      this.dialogOpen = false;\n      this.dataSource = new MatTableDataSource(this.doctors);\n    }\n\n    ngOnInit() {\n      this.communication.getAllDoctors().subscribe({\n        next: docs => {\n          this.doctors = docs;\n        }\n      }); // try {\n      //   this.communication.getAllDoctors().subscribe((allDoctors) => {\n      //     this.doctors = allDoctors;\n      //     this.dataSource.data = allDoctors;\n      //   });\n      // }\n      // catch {}\n    }\n\n    getObjectKeys(obj) {\n      return Object.keys(obj);\n    }\n\n    getDoctor(id) {\n      try {\n        this.communication.getDoctor(id).subscribe(doctor => {\n          this.selectedDoctor = doctor;\n        });\n      } catch (_a) {}\n    }\n\n  }\n\n  DoctorComponent.ɵfac = function DoctorComponent_Factory(t) {\n    return new (t || DoctorComponent)(i0.ɵɵdirectiveInject(i1.CommunicationService));\n  };\n\n  DoctorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorComponent,\n    selectors: [[\"app-medecin\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"id\", \"doctor-container\"], [\"class\", \"grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"grid-item\"], [\"class\", \"key\", 4, \"ngFor\", \"ngForOf\"], [1, \"key\"]],\n    template: function DoctorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DoctorComponent_div_1_Template, 3, 2, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.doctors);\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\"\"]\n  });\n  return DoctorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}