{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table'; // import { MatDialog } from '@angular/material/dialog';\n\nimport { CommunicationService } from 'src/app/services/communication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/communication.service\";\nimport * as i2 from \"@angular/router\";\nexport let DoctorComponent = /*#__PURE__*/(() => {\n  class DoctorComponent {\n    constructor(communication) {\n      this.communication = communication;\n      this.doctors = [];\n      this.dialogOpen = false;\n      this.dataSource = new MatTableDataSource(this.doctors);\n    }\n\n    ngOnInit() {\n      this.communication.getAllDoctors().subscribe({\n        next: docs => {\n          this.doctors = docs;\n        }\n      });\n    }\n\n    getObjectKeys(obj) {\n      return Object.keys(obj);\n    }\n\n    getDoctor(id) {\n      this.communication.getDoctor(id).subscribe({\n        next: doc => {\n          this.selectedDoctor = doc;\n        }\n      });\n    }\n\n    deleteDoctor(idMedecin) {\n      //Confirmation dialog\n      //Should not close when clicking outside\n      this.communication.deleteDoctor(idMedecin).subscribe({\n        next: () => {\n          this.communication.getAllDoctors();\n        }\n      });\n    }\n\n    insertDoctor(doctor) {\n      //Confirmation dialog\n      //Should contain list of values\n      // Should \n      //Should not close when clicking outside\n      this.communication.insertDoctor(doctor).subscribe({\n        next: () => {\n          this.communication.getAllDoctors();\n        }\n      });\n    }\n\n    modifyDoctor(doctor) {\n      //Confirmation dialog\n      //Should not close when clicking outside\n      this.communication.modifyDoctor(doctor).subscribe({\n        next: () => {\n          this.communication.getAllDoctors();\n        }\n      });\n    }\n\n  }\n\n  DoctorComponent.ɵfac = function DoctorComponent_Factory(t) {\n    return new (t || DoctorComponent)(i0.ɵɵdirectiveInject(i1.CommunicationService));\n  };\n\n  DoctorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorComponent,\n    selectors: [[\"app-medecin\"]],\n    decls: 1,\n    vars: 0,\n    template: function DoctorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    directives: [i2.RouterOutlet],\n    styles: [\"table[_ngcontent-%COMP%]{width:80%;border:1px #ccc;border-radius:20px;perspective:1px;background-color:#f2f2f2;text-align:center;margin:auto;padding:0 auto;box-shadow:0 0 20px #00000026}tr[_ngcontent-%COMP%]{border-radius:20px;perspective:1px}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:1px 1px 0px 0px solid #ccc;padding:10px}th[_ngcontent-%COMP%]{background-color:#eee}button[_ngcontent-%COMP%]{border:none}button[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover{color:87CEEB}#add-button[_ngcontent-%COMP%]{border:1px #ccc;border-radius:5px;background-color:#f2f2f2;box-shadow:0 0 20px #00000026;margin:auto;padding:auto}\"]\n  });\n  return DoctorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}